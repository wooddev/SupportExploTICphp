<?php

namespace Transfer\ReservationBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * CreneauRdvRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CreneauRdvRepository extends EntityRepository
{
    public function findByRecherche($rdvRecherche){

        $query = $this->getEntityManager()->createQuery(
        "SELECT cr
        FROM TransferReservationBundle:CreneauRdv cr
        WHERE  cr.disponibiliteTotale > 0
        AND (SELECT min(dispo.valeur)
            FROM TransferReservationBundle:Disponibilite dispo
            JOIN dispo.typeCamion tc
            WHERE tc.nom = :typeCamion
            AND dispo.creneau = cr)>0
        AND cr.dateHeureDebut BETWEEN :min AND :max
        ");
        // Construction de l'interval de temps de recherche
        $interval = new \DateInterval('PT30M'); //PÃ©riode de Temps de 60 min
        $min = clone $rdvRecherche->getDateHeureDebut();
        $min->sub($interval);
        $max = clone $rdvRecherche->getDateHeureDebut(); 
        $max->add($interval);
        //
        $query->setParameters(array(
            'min'=> $min,
            'max'=> $max,
            'typeCamion'=>$rdvRecherche->getTypeCamion()->getNom()
                ));
        
        return $query->getResult();
    }   
    
    public function findRechercheListe($creneauRecherche){

        $query = $this->getEntityManager()->createQuery(
        "SELECT cr
        FROM TransferReservationBundle:CreneauRdv cr
        JOIN cr.typePoste t
        WHERE  t.id = :posteId
        AND cr.heureDebut >= :heureDebut
        AND cr.heureFin <= :heureFin
        AND cr.dateHeureDebut >= :dateHeureDebut
        AND cr.dateHeureFin <= :dateHeureFin  
        AND cr.rdvs is EMPTY        
        ");

        $query->setParameters(array(
            'posteId'=> $creneauRecherche->getTypePoste()->getId(),
            'dateHeureDebut'=> $creneauRecherche->getDateHeureDebut(),
            'dateHeureFin'=> $creneauRecherche->getDateHeureFin(),
            'heureDebut'=> $creneauRecherche->getHeureDebut(),
            'heureFin'=> $creneauRecherche->getHeureFin(),
                ));
        
        return $query->getResult();
    }
    
    public function findProche($creneauRdv, $mode){
        
        switch($mode){
            case 'suivant':
                $signe = '>';
                $order =  "ASC";
                break;
            case 'precedent':
                $signe= '<';
                $order = 'DESC';
                break;
        }
        
        $query = $this->getEntityManager()->createQuery(
                    "SELECT cr
                    FROM TransferReservationBundle:CreneauRdv cr
                    JOIN cr.typePoste t
                    WHERE  cr.disponibiliteTotale > 0
                    AND t.nom = :nomPoste
                    AND cr.jour = :jour
                    AND cr.dateHeureDebut ".$signe." :date
                    ORDER BY cr.dateHeureDebut ".$order
                    );
        
        $query->setParameters(array(
            'date'=> $creneauRdv->getDateHeureDebut(),
            'jour'=> $creneauRdv->getJour(),
            'nomPoste'=> $creneauRdv->getTypePoste()->getNom(),
            ));
        return $query->getResult();
    }
    
    public function findByAnnee_Semaine_Poste($annee, $semaine,$poste){
        $query = $this->getEntityManager()->createQuery(
                'SELECT cr
                FROM TransferReservationBundle:CreneauRdv cr
                JOIN cr.typePoste p
                WHERE cr.semaine = :semaine                
                AND cr.annee = :annee
                AND p.nom = :nomPoste
                '
                );
        $query->setParameters(array(
            'semaine'=> $semaine,
            'annee'=> $annee,
            'nomPoste'=> $poste->getNom(),
                ));
        return $query->getResult();
    }
}
