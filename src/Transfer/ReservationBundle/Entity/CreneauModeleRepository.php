<?php

namespace Transfer\ReservationBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * CreneauModeleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CreneauModeleRepository extends EntityRepository
{
    public function findDisponibles(){
        $qb = $this->getEntityManager()->createQueryBuilder();
        
        $subqb = $this->getEntityManager()->createQueryBuilder();
        
        $subqb  ->select('cm0')
                ->from('TransferReservationBundle:CreneauModele','cm0 ')
                ->leftjoin('cm0.creneauxPrefs', 'cp')
                ->groupBy('cm0')
                ->having('count(cp)>0')
                ;

        $qb ->select('cm')
            ->from('TransferReservationBundle:CreneauModele','cm ')
            ->where($qb->expr()->notin('cm', $subqb->getDQL()))
            ;      
        
        return $qb;                
    }

       
    public function findByNomStatut($nomStatut){
        return $this->getEntityManager()
                ->createQuery('
                    SELECT cm
                    FROM TransferReservationBundle:CreneauModele cm
                    JOIN cm.statut st
                    WHERE st.nom = :nomStatut
                    ORDER BY cm.jour, cm.heureDebut
                    ')
                ->setParameter(':nomStatut',$nomStatut)
                ->getResult();
    }
        public function findActifsByPoste($poste){
        return $this->getEntityManager()
                ->createQuery('
                    SELECT cm
                    FROM TransferReservationBundle:CreneauModele cm
                    JOIN cm.statut st
                    JOIN cm.typePoste p
                    WHERE st.nom = :statut
                    AND p.id = :idPoste
                    ORDER BY cm.jour, cm.heureDebut
                    ')
                ->setParameter(':idPoste',$poste->getId())
                ->setParameter(':statut','Actif')
                ->getResult();
    }
    public function findSemaineMinutesMin($poste){
        
        $query = $this->getEntityManager()->createQuery();
        
        $query->setDQL('
                        SELECT min(c.heureDebut)
                        FROM TransferReservationBundle:CreneauModele c
                        JOIN c.typePoste p
                        WHERE p.id = :idPoste
                ')
                ->setParameter('idPoste', $poste->getId());   
        
        return $query->getSingleScalarResult();        
    }
    
    
    /**
     * Recherche les créneaux chevauchés par le créneau transmis
     * 
     * @param \Transfer\ReservationBundle\Entity\CreneauModele $creneauModele
     * @return type
     */
    public function findOverlay(CreneauModele $creneauModele){
        $query = $this->getEntityManager()->createQuery("
            SELECT cm
            FROM TransferReservationBundle:CreneauModele cm
            JOIN cm.typePoste tp
            WHERE tp.id = :tpId
            AND cm.jour = :jour
            AND (
                    (cm.heureDebut>=:hd AND cm.heureFin<=:hf)
                    OR( cm.heureDebut<=:hd AND cm.heureFin>=:hf)
                    OR( cm.heureDebut between :hd AND :hf)
                    OR(cm.heureFin between :hd AND :hf)
                )
            ");
        
        $query->setParameters(array(
            'tpId'=> $creneauModele->getTypePoste()->getId(),
            'hd' => $creneauModele->getHeureDebut()->format('H:i:s'),
            'hf' => $creneauModele->getHeureFin()->format('H:i:s'),
            'jour'=>$creneauModele->getJour(),
            ));
        $query->getSQL();
        return $query->getResult();                       
    }
    /**
     * Test si le créneau transmis chevauche des créneaux existants
     * 
     * @param \Transfer\ReservationBundle\Entity\CreneauModele $creneauModele
     * @return boolean
     */
    public function testExist(CreneauModele $creneauModele){
        if(count($this->findOverlay($creneauModele))>0){
            return true;
        }else{
            return false;
        }
        
        
    }
    
    /**
     * 
     * @param \Transfer\ReservationBundle\Recherche\CreneauModeleRecherche $creneauRecherche
     */ 
    public function findRecherche(\Transfer\ReservationBundle\Recherche\CreneauModeleRecherche $creneauRecherche){
        $query= $this->getEntityManager()->createQuery("
            SELECT cm            
            FROM TransferReservationBundle:CreneauModele cm
            JOIN cm.typePoste tp
            WHERE cm.jour IN (:jours)
            AND cm.heureDebut >= :hd
            AND cm.heureFin <= :hf
            AND tp.id IN (:tpIds)
            AND cm.creneauxPrefs is EMPTY
            ");
        $tpIds= array();
        foreach($creneauRecherche->getPostes() as $poste){
            $tpIds[]=$poste->getId();
        }
        
        $query->setParameters(array(
            'jours'=>$creneauRecherche->getJours(),
            'hd'=>$creneauRecherche->getHeureDebut()->format('H:i:s'),
            'hf'=>$creneauRecherche->getHeureFin()->format('H:i:s'),
            'tpIds'=>$tpIds,
        ));
        return $query->getResult();
    }
}
