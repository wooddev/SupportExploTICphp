<?php

namespace Explotic\PlanningBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * CalendrierRepository
 *
 * 
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CalendrierRepository extends EntityRepository
{    
    /**
     * 
     * @param \Explotic\AdminBundle\Entity\User $user
     * @param type $options 
     * ## VALEURS ACCEPTEES ## 
     * - "type" : stagiaire,formateur, bureau, poste, salle, session
     * - "id" : id de l'entité possédant le calendrier
     * @return type
     */
    public function findByOptions($options) {       
            switch($options['type']){                  
                case "Stagiaire" :
                    $sql = "SELECT t 
                            FROM ExploticTiersBundle:Stagiaire t
                            WHERE t.id = :id";
                    break;                    
                case "Formateur" :
                    $sql = "SELECT t 
                            FROM ExploticTiersBundle:formateur t
                            WHERE t.id = :id";
                    break;                    
                case "Poste" :
                    $sql = "SELECT t 
                            FROM ExploticTiersBundle:Poste t
                            WHERE t.id = :id";
                    break;                    
                case "Salle" :
                    $sql = "SELECT t
                            FROM ExploticTiersBundle:salle t
                            WHERE t.id = :id";
                    break;                    
                case "Bureau" :
                    $sql = "SELECT t 
                            FROM ExploticTiersBundle:bureau t
                            WHERE t.id = :id";
                    break;                    
                case "Session" :
                    // cas particulier pour une session : on récupère les calendriers associés (stg, formateur, salle/poste)
                    $QuerySession = $this->getEntityManager()->createQuery("
                                SELECT s
                                FROM ExploticPlanningBundle:session s
                                WHERE s.id = :idSession");
                    $QuerySession->setParameter("idSession", $options["id"]);

                    $session = $QuerySession->getSingleResult();

                    $calendriers = array();

                    $calendriers[0]= array(  
                                            'id'=>$session->getCalendrier()->getId(),
                                            'nom' => "Session en cours"
                                    );                    

                    if (!(null===$session->getPoste())){
                        $calendriers[]= array(  'id'=> $session->getPoste()->getCalendrier()->getId(),
                                                'nom'=> "Poste");
                    }
                    if(!(null===$session->getSalle())){
                        $calendriers[]=array(   'id'=> $session->getSalle()->getCalendrier()->getId(),
                                                'nom'=>'Salle');
                    }                       
                    foreach ($session->getFormateurs() as $formateur){
                        $calendriers[]=array(   'id'=> $formateur->getCalendrier()->getId(),
                                                'nom'=> 'Frm: '.$formateur->__toString());
                    }
                    foreach($session->getStagiaires() as $stagiaire){
                        $calendriers[]= array(  'id'=> $stagiaire->getCalendrier()->getId(),
                                                'nom'=> 'Stg: '.$stagiaire->__toString());
                    }                        
                    return $calendriers;                        
                    break;                    
                }     

            $query = $this->getEntityManager()->createQuery($sql);
            $query->setParameter("id", $options["id"]);
            $calendrier = $query->getSingleResult()->getCalendrier();
            return array(array(   
                            'id'=> $calendrier->getId(),
                            'nom'=>'Agenda enregistré'));         
    }
}
